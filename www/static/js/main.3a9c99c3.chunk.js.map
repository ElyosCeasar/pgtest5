{"version":3,"sources":["services/authService.jsx","components/commons/navbar.jsx","services/appService.jsx","components/pages/showAllForms.jsx","services/answerService.jsx","components/reuseable/mapElements/lib/arePathsEqual.js","components/reuseable/mapElements/Polygon.js","components/reuseable/mapElements/lib/String.js","components/reuseable/mapComponent.jsx","components/pages/showSpeceficForm.jsx","components/pages/startPage.jsx","services/areaService.jsx","components/pages/showDashbordForSpeceficForm.jsx","components/reuseable/mapUnchangeComponent.jsx","components/pages/showspeceficFormForManager.jsx","App.js","serviceWorker.js","index.js"],"names":["jwt","require","authService","url","tokenName","isExpired","decodedToken","this","getDecodedToken","secondsSinceEpoch","Math","round","Date","now","payload","exp","token","localStorage","getItem","decode","complete","setInterval","isTokenExist","checkIfTokenIsExpired","logout","console","log","Role","removeItem","document","location","href","val","signIn","username","password","then","res","setItem","data","getRole","alert","window","reload","catch","error","response","headers","Authorization","loginInfo","axios","post","NavBar","state","collapsed","toggleCollapsed","isNavbarButtonClicked","props","setState","smallView","style","float","direc","width","backgroundColor","defaultSelectedKeys","defaultOpenKeys","mode","theme","textAlign","inlineCollapsed","Item","key","to","color","type","marginRight","onClick","checkedChildren","unCheckedChildren","marginTop","marginLeft","display","onChange","onDirectChange","checked","BigView","height","smallSize","React","Component","appService","authServices","getAllForms","get","getTokenForSend","getSpeceficFormById","id","postNewForm","newForm","postComplitedFormByClient","ComplitedForm","ShowAllForms","columns","headerFixer","title","dataIndex","align","render","text","record","handleShow","rolebasedButtonCreater","forms","sort","a","b","number","dataSource","bordered","tableLayout","size","history","push","getById","getAllAnswersByFormId","getAnswerStatesticByFormId","filterAnswersForGrid","searchItems","formId","isValidLatLng","elem","hasOwnProperty","Polygon","polygonPromise","wrappedPromise","promise","Promise","resolve","reject","bind","renderPolygon","prevProps","map","pathA","pathB","Array","isArray","length","i","lat","lng","arePathsEqual","paths","polygon","setMap","google","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","params","maps","evt","e","evtName","split","word","charAt","toUpperCase","slice","join","defaultProps","name","MapComponent","lastId","clickHandler","marker","newPoints","points","latLng","pointId","itemId","onMarkerClick","position","index","findIndex","x","splice","drawPolygon","zoom","initialCenter","GoogleApiWrapper","apiKey","Option","Select","ShowSpeceficForm","firstTimeForSetState","form","ElementValues","formBuilder","jsxElementArray","fields","required","hasOptions","htmlFor","placeholder","SelectOptionOnChangeHandeler","options","value","label","inputOnChangeHandeler","Value","inputNumberOnChangeHandeler","direction","defaultValue","DatePickerOnChangeHandeler","marginBottom","LocationOnClickHandeler","intialStateBuilder","target","getAttribute","_d","submitForm","service","answerService","checker","formatOutput","match","notification","success","message","description","placement","tempRes","elementName","answer","margin","padding","StartPage","handleSubmit","preventDefault","validateFields","err","values","login","getFieldDecorator","left","right","top","bottom","maxWidth","maxHeight","overflow","onSubmit","className","rules","prefix","htmlType","areaService","getAllAreasNameForPoligon","poligon","ShowDashbordForSpeceficForm","percent","visible","partFirst","partMiddle","getMiddlePart","partLast","_id","showModal","handleOk","searchItem","row","substring","lastIndexOf","formAnswerArray","finally","getData","handleCancel","aservice","res2","getPercent","idOfInterval","clearInterval","paddingRight","paddingLeft","status","icon","onOk","onCancel","getSearchItem","getFooter","newItem","areaServices","answers","columnTypes","j","area","time","answerId","NumberOfNumberColumns","FindAllNumbersOfColumnNumbers","createSumOfColumn","getSumColumn","sum","buildItemMap","buildItemNumber","buildItemNotSpecial","ElementValue","MapUnchangeComponent","ShowSpeceficFormForManager","body","formTitle","testloc","generateFormData","generateBody","forEach","element","getElementNotMap","getElementMap","point","App","formCreaterState","Elements","span","path","directHandler","navbarButtonResizeViewClickHandler","zIndex","formCreaterStateFixHandeler","st","addEventListener","resize","resizeRes","innerWidth","logUserOutInExpirtim","WrappedNormalLoginForm","Form","create","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a9c99c3.chunk.js","sourcesContent":["import axios from \"axios\";\r\nvar jwt = require(\"jsonwebtoken\");\r\nclass authService {\r\n  url = \"http://localhost:5000\";\r\n  //url = \"http://hw2-ie-back-master.herokuapp.com\";\r\n  tokenName = \"token\";\r\n\r\n  checkIfTokenIsExpired() {\r\n    var isExpired = false;\r\n\r\n    var decodedToken = this.getDecodedToken();\r\n    const secondsSinceEpoch = Math.round(Date.now() / 1000);\r\n\r\n    if (decodedToken.payload.exp < secondsSinceEpoch) {\r\n      isExpired = true;\r\n    }\r\n    return isExpired;\r\n  }\r\n  getDecodedToken() {\r\n    const token = localStorage.getItem(this.tokenName);\r\n    var decodedToken = jwt.decode(token, { complete: true });\r\n    return decodedToken;\r\n  }\r\n  logUserOutInExpirtim() {\r\n    const refreshIntervalId = setInterval(() => {\r\n      if (this.isTokenExist() && this.checkIfTokenIsExpired()) {\r\n        this.logout();\r\n      }\r\n    }, 10000);\r\n  }\r\n  getRole() {\r\n    console.log(this.getDecodedToken);\r\n    return this.getDecodedToken().payload.Role;\r\n  }\r\n  logout() {\r\n    localStorage.removeItem(this.tokenName);\r\n    document.location.href = \"/\";\r\n    // window.location.reload();\r\n  }\r\n  login(val) {\r\n    this.signIn(val.username, val.password)\r\n      .then(res => {\r\n        if (res !== null) {\r\n          localStorage.setItem(this.tokenName, res.data);\r\n          if (this.getRole() == \"admin\") {\r\n            localStorage.removeItem(this.tokenName);\r\n            alert(\"ادمین اجازه‌ی ورود به این بخش را ندارد\");\r\n          }\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        alert(error.response.data);\r\n      });\r\n\r\n    //   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJSb2xlIjoiZmllbGRBZ2VudCIsInVzZXJuYW1lIjoiSm9obiBEb2UiLCJleHAiOjE1Nzk4MTQ1MDUwfQ.7nBllYKIYHoJDvuJvagxVviyFshKCSo51A7ptkI-JgI\"\r\n  }\r\n  isTokenExist() {\r\n    return localStorage.getItem(this.tokenName) !== null;\r\n  }\r\n  getTokenForSend() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(this.tokenName)}`\r\n      }\r\n    };\r\n    return config;\r\n  }\r\n  //service out\r\n  signIn(username, password) {\r\n    const loginInfo = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return axios.post(this.url + \"/api/auth/login\", loginInfo);\r\n  }\r\n}\r\n\r\nexport default authService;\r\n","// export default NavBar;\nimport { Menu, Icon, Button, Switch } from \"antd\";\nimport React from \"react\";\nimport Sticky from \"react-sticky-el\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"../../services/authService\";\nclass NavBar extends React.Component {\n  state = {\n    collapsed: false\n  };\n\n  toggleCollapsed = () => {\n    const { isNavbarButtonClicked } = this.props;\n    isNavbarButtonClicked();\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render() {\n    const { smallSize } = this.props;\n    if (smallSize === \"true\") {\n      return this.smallView();\n    } else {\n      return this.BigView();\n    }\n  }\n  smallView = () => {\n    return (\n      <Sticky>\n        <div\n          style={{\n            float: this.props.direc === \"rtl\" ? \"right\" : \"left\",\n            width: \"100%\",\n            backgroundColor: \"#001529\"\n          }}\n        >\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"horizontal\"\n            theme=\"dark\"\n            style={{\n              textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n            }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <Menu.Item key=\"1\">\n              <Link to=\"/ShowAllForms\" style={{ color: \"white\" }}>\n                <Icon type=\"desktop\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"مشاهده\" : \"Show\"}\n                </span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <a onClick={this.logout} style={{ color: \"white\" }}>\n                <Icon type=\"logout\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"خروج\" : \"Log Out\"}\n                </span>\n              </a>\n            </Menu.Item>\n\n            <Switch\n              checkedChildren=\"Fa\"\n              unCheckedChildren=\"En\"\n              style={{\n                float: this.props.direc === \"rtl\" ? \"left\" : \"right\",\n                marginTop: \"10px\",\n                marginLeft: \"20px\",\n                marginRight: \"20px\",\n                display: \"block\"\n              }}\n              onChange={this.props.onDirectChange}\n              checked={this.props.direc === \"rtl\" ? true : false}\n            />\n          </Menu>\n        </div>\n      </Sticky>\n    );\n  };\n  BigView = () => {\n    return (\n      <Sticky>\n        <div\n          style={{\n            float: this.props.direc === \"rtl\" ? \"right\" : \"left\",\n            width: \"100%\",\n            height: \"100vh\"\n          }}\n        >\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{\n              height: \"100%\",\n              textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n            }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <Button\n              type=\"primary\"\n              onClick={this.toggleCollapsed}\n              style={{\n                marginTop: \"2%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                display: \"block\"\n              }}\n            >\n              <Icon type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"} />\n            </Button>\n\n            <Menu.Item key=\"1\">\n              <Link to=\"/ShowAllForms\" style={{ color: \"white\" }}>\n                <Icon type=\"desktop\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"مشاهده\" : \"Show\"}\n                </span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <a onClick={this.logout} style={{ color: \"white\" }}>\n                <Icon type=\"logout\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"خروج\" : \"Log Out\"}\n                </span>\n              </a>\n            </Menu.Item>\n\n            <Switch\n              checkedChildren=\"Fa\"\n              unCheckedChildren=\"En\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                display: \"block\"\n              }}\n              onChange={this.props.onDirectChange}\n              checked={this.props.direc === \"rtl\" ? true : false}\n            />\n          </Menu>\n        </div>\n      </Sticky>\n    );\n  };\n  logout() {\n    const authServices = new authService();\n    authServices.logout();\n  }\n}\n\nexport default NavBar;\n","import axios from \"axios\";\nimport authService from \"./authService\";\nclass appService {\n  url = \"http://localhost:5000\";\n  //url = \"http://hw2-ie-back-master.herokuapp.com\";\n  authServices = new authService();\n  getAllForms = () => {\n    return axios.get(\n      this.url + \"/api/forms\",\n      this.authServices.getTokenForSend()\n    );\n  };\n  getSpeceficFormById = id => {\n    return axios.get(\n      this.url + \"/api/forms/\" + id,\n      this.authServices.getTokenForSend()\n    );\n  };\n  postNewForm = newForm => {\n    return axios.post(\n      this.url + \"/api/forms\",\n      newForm,\n      this.authServices.getTokenForSend()\n    );\n  };\n  postComplitedFormByClient = (ComplitedForm, id) => {\n    return axios.post(\n      this.url + \"/api/answer/\" + id,\n      ComplitedForm,\n      this.authServices.getTokenForSend()\n    );\n  };\n}\n\nexport default appService;\n","import { Table, Button } from \"antd\";\nimport React from \"react\";\nimport appService from \"../../services/appService\";\nimport authService from \"../../services/authService\";\n\nclass ShowAllForms extends React.Component {\n  columns = [];\n  state = {\n    data: []\n  };\n  // data = [\n  //   {\n  //     key: \"1\",\n  //     name: \"فرم ثبت نام دانشجو\",\n  //     number: 1\n  //   },\n  //   {\n  //     key: \"2\",\n  //     name: \"فرم انتخاب واحد\",\n  //     number: 2\n  //   },\n  //   {\n  //     key: \"3\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 3\n  //   },\n  //   {\n  //     key: \"4\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 4\n  //   },\n  //   {\n  //     key: \"5\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 5\n  //   },\n  //   {\n  //     key: \"6\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 6\n  //   },\n  //   {\n  //     key: \"7\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 7\n  //   },\n  //   {\n  //     key: \"8\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 8\n  //   },\n  //   {\n  //     key: \"9\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 9\n  //   },\n  //   {\n  //     key: \"10\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 10\n  //   },\n  //   {\n  //     key: \"11\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 11\n  //   },\n  //   {\n  //     key: \"12\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 12\n  //   }\n  // ];\n  componentDidMount() {\n    const service = new appService();\n    service.getAllForms().then(res => {\n      let data = res.data.forms.sort((a, b) => {\n        if (a.number < b.number) {\n          return 1;\n        }\n        if (a.number > b.number) {\n          return -1;\n        }\n        return 0;\n      });\n      this.setState({ data: data });\n    });\n  }\n\n  headerFixer = () => {\n    this.columns = [\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"شماره فرم\" : \"form number\"}\n          </span>\n        ),\n        dataIndex: \"number\",\n        key: \"number\",\n        width: \"15%\",\n        align: \"center\",\n\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\n      },\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"نام فرم\" : \"form name\"}\n          </span>\n        ),\n        dataIndex: \"name\",\n        key: \"name\",\n        width: \"70%\",\n        align: \"center\",\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\n      },\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"عملیات\" : \"َAction\"}\n          </span>\n        ),\n        width: \"15%\",\n        align: \"center\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <Button type=\"primary\" onClick={() => this.handleShow(record.key)}>\n              {this.rolebasedButtonCreater()}\n            </Button>\n          </span>\n        )\n      }\n    ];\n  };\n  rolebasedButtonCreater() {\n    const authServices = new authService();\n\n    if (authServices.getRole() === \"fieldAgent\") {\n      return this.props.direc === \"rtl\" ? \"پر کردن\" : \"fill\";\n    } else {\n      //control center\n      return this.props.direc === \"rtl\" ? \"مشاهده\" : \"show\";\n    }\n  }\n\n  render() {\n    this.headerFixer();\n    return (\n      <div\n        style={{\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n        }}\n      >\n        <h3 style={{ color: \"white\", marginRight: \"3px\", marginLeft: \"3px\" }}>\n          {this.props.direc === \"rtl\"\n            ? \"مشاهده تمام فرم های موجود\"\n            : \"Showing all forms\"}\n        </h3>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          style={{\n            backgroundColor: \"white\"\n          }}\n          bordered=\"true\"\n          tableLayout=\"auto\"\n          size=\"middle\"\n        />\n      </div>\n    );\n    // return <Table columns={this.columns} dataSource={this.data} />;\n  }\n  handleShow(id) {\n    const authServices = new authService();\n    if (authServices.getRole() === \"fieldAgent\") {\n      this.props.history.push(\"/ShowSpeceficForm/\" + id);\n    } else {\n      //control center\n      this.props.history.push(\"/ShowDashbordForSpeceficForm/\" + id);\n    }\n  }\n}\n\nexport default ShowAllForms;\n","import axios from \"axios\";\r\nimport authService from \"./authService\";\r\nclass appService {\r\n  url = \"http://localhost:5000\";\r\n  //url = \"http://hw2-ie-back-master.herokuapp.com\";\r\n  authServices = new authService();\r\n  postComplitedFormByClient = (ComplitedForm, id) => {\r\n    return axios.post(\r\n      this.url + \"/api/answer/\" + id,\r\n      ComplitedForm,\r\n      this.authServices.getTokenForSend()\r\n    );\r\n  };\r\n  getById = id => {\r\n    return axios.get(\r\n      this.url + \"/api/answer/\" + id,\r\n      this.authServices.getTokenForSend()\r\n    );\r\n  };\r\n  getAllAnswersByFormId = id => {\r\n    return axios.get(\r\n      this.url + \"/api/answer/getAllAnswersByFormId/\" + id,\r\n      this.authServices.getTokenForSend()\r\n    );\r\n  };\r\n  getAnswerStatesticByFormId = id => {\r\n    return axios.get(\r\n      this.url + \"/api/answer/getAnswerStatesticByFormId/\" + id,\r\n      this.authServices.getTokenForSend()\r\n    );\r\n  };\r\n  filterAnswersForGrid = (searchItems, formId) => {\r\n    return axios.post(\r\n      this.url + \"/api/answer/filterAnswersForGrid/ \" + formId,\r\n      searchItems,\r\n      this.authServices.getTokenForSend()\r\n    );\r\n  };\r\n}\r\n\r\nexport default appService;\r\n","/**\n * Compares two path arrays of LatLng objects.\n */\n\nexport const arePathsEqual = function(pathA, pathB) {\n  if (pathA === pathB) {\n    return true;\n  }\n  if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n    return false;\n  }\n  if (pathA.length !== pathB.length) {\n    return false;\n  }\n  for (let i = 0; i < pathA.length; ++i) {\n    if (pathA[i] === pathB[i]) {\n      continue;\n    }\n    if (\n      !isValidLatLng(pathA[i]) ||\n      !isValidLatLng(pathB[i])\n    ) {\n      return false;\n    }\n    if (\n      pathB[i].lat !== pathA[i].lat ||\n      pathB[i].lng !== pathA[i].lng\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Helper that checks whether an array consists of objects\n * with lat and lng properties\n * @param {object} elem the element to check\n * @returns {boolean} whether or not it's valid\n */\nconst isValidLatLng = function(elem) {\n  return (\n    elem !== null &&\n    typeof elem === 'object' &&\n    elem.hasOwnProperty('lat') &&\n    elem.hasOwnProperty('lng')\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { arePathsEqual } from \"./lib/arePathsEqual\";\nimport { camelize } from \"./lib/String\";\n//  const evtNames = [\"click\", \"mouseout\", \"mouseover\"];\n// const evtNames = [];\n// window.onload = function() {\n//   evtNames.push(\"click\");\n//   evtNames.push(\"mouseout\");\n//   evtNames.push(\"mouseover\");\n// };\nconst wrappedPromise = function() {\n  var wrappedPromise = {},\n    promise = new Promise(function(resolve, reject) {\n      wrappedPromise.resolve = resolve;\n      wrappedPromise.reject = reject;\n    });\n  wrappedPromise.then = promise.then.bind(promise);\n  wrappedPromise.catch = promise.catch.bind(promise);\n  wrappedPromise.promise = promise;\n\n  return wrappedPromise;\n};\n\nexport class Polygon extends React.Component {\n  componentDidMount() {\n    this.polygonPromise = wrappedPromise();\n    this.renderPolygon();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.map !== prevProps.map ||\n      !arePathsEqual(this.props.paths, prevProps.paths)\n    ) {\n      if (this.polygon) {\n        this.polygon.setMap(null);\n      }\n      this.renderPolygon();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n\n  renderPolygon() {\n    const {\n      map,\n      google,\n      paths,\n      strokeColor,\n      strokeOpacity,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      ...props\n    } = this.props;\n\n    if (!google) {\n      return null;\n    }\n\n    const params = {\n      map,\n      paths,\n      strokeColor,\n      strokeOpacity,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      ...props\n    };\n\n    this.polygon = new google.maps.Polygon(params);\n\n    // evtNames.forEach(e => {\n    //   this.polygon.addListener(e, this.handleEvent(e));\n    // });\n\n    this.polygonPromise.resolve(this.polygon);\n  }\n\n  getPolygon() {\n    return this.polygonPromise;\n  }\n\n  handleEvent(evt) {\n    return e => {\n      const evtName = `on${camelize(evt)}`;\n      if (this.props[evtName]) {\n        this.props[evtName](this.props, this.polygon, e);\n      }\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nPolygon.propTypes = {\n  paths: PropTypes.array,\n  strokeColor: PropTypes.string,\n  strokeOpacity: PropTypes.number,\n  strokeWeight: PropTypes.number,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number\n};\n\n//evtNames.forEach(e => (Polygon.propTypes[e] = PropTypes.func));\n\nPolygon.defaultProps = {\n  name: \"Polygon\"\n};\n\nexport default Polygon;\n","export const camelize = function(str) {\n  return str.split(' ').map(function(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join('');\n}\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport Polygon from \"./mapElements/Polygon\";\n\nclass MapComponent extends Component {\n  lastId = 0;\n  render() {\n    // console.log(\"x\");\n    return (\n      <Map\n        google={this.props.google}\n        zoom={10}\n        style={{ width: \"30%\", height: \"300px\" }}\n        initialCenter={{ lat: 35.715298, lng: 51.404343 }}\n        onClick={this.clickHandler}\n      >\n        {this.drawPolygon()}\n        {this.props.points.map(x => (\n          <Marker\n            onClick={this.onMarkerClick}\n            name={\"Current location\"}\n            position={{ lat: x.lat, lng: x.lng }}\n            id={x.pointId}\n            key={x.pointId}\n          />\n        ))}\n      </Map>\n    );\n  }\n  clickHandler = (props, marker, e) => {\n    // console.log(\"lng\", e.latLng.lng());\n    //   console.log(\"lat\", e.latLng.lat());\n    let newPoints = [...this.props.points];\n    newPoints.push({\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n      pointId: this.lastId\n    });\n    this.lastId = this.lastId + 1;\n    console.log(\"z\", newPoints);\n    this.props.clickHandler(this.props.itemId, newPoints);\n  };\n  onMarkerClick = evt => {\n    const pos = evt.position;\n    const index = this.props.points.findIndex(x => {\n      return x.pointId === evt.id;\n    });\n    let newPoints = [...this.props.points];\n    newPoints.splice(index, 1);\n    this.props.clickHandler(this.props.itemId, newPoints);\n  };\n  drawPolygon = () => {\n    if (this.props.points.length >= 3) {\n      return (\n        <Polygon\n          paths={this.props.points}\n          strokeColor=\"#0000FF\"\n          strokeOpacity={0.8}\n          strokeWeight={2}\n          fillColor=\"#0000FF\"\n          fillOpacity={0.35}\n        />\n      );\n    }\n  };\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDjs0u02-62FMwrtxMxci5pc6PIubSyW28\"\n})(MapComponent);\n","import React, { Component } from \"react\";\nimport answerService from \"../../services/answerService\";\nimport appService from \"../../services/appService\";\nimport {\n  Button,\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  notification\n} from \"antd\";\nimport MapComponent from \"../reuseable/mapComponent\";\nconst { Option } = Select;\nclass ShowSpeceficForm extends Component {\n  firstTimeForSetState = true;\n  state = {\n    form: {},\n    ElementValues: []\n  };\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const service = new appService();\n    service\n      .getSpeceficFormById(id)\n      .then(res => this.setState({ form: res.data.form }));\n  }\n  componentDidUpdate() {\n    if (this.state.form.fields && this.firstTimeForSetState) {\n      this.intialStateBuilder();\n      this.firstTimeForSetState = false;\n    }\n  }\n\n  render() {\n    console.log(this.state.ElementValues);\n    return (\n      <div\n        style={{\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n        }}\n      >\n        <h3 style={{ color: \"white\", marginRight: \"20px\", marginLeft: \"20px\" }}>\n          {this.props.direc === \"rtl\"\n            ? \"مشاهده و پر کردن فرم\"\n            : \"Show And Fill\"}\n        </h3>\n        <div\n          style={{\n            backgroundColor: \"white\",\n            margin: \"20px\",\n            padding: 10\n          }}\n        >\n          <h4>{this.state.form.title}</h4>\n\n          {this.formBuilder()}\n          <Button\n            type=\"primary\"\n            style={{\n              display: \"block\",\n              marginTop: \"20px\",\n              marginBottom: \"10px\"\n            }}\n            onClick={this.submitForm}\n          >\n            {this.props.direc === \"rtl\" ? \"ثبت\" : \"confirm\"}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  formBuilder = () => {\n    let jsxElementArray = [];\n    if (this.state.form.fields) {\n      let fields = [...this.state.form.fields];\n      let ElementValues = [...this.state.ElementValues];\n\n      for (let i = 0; i < fields.length; i++) {\n        const color = fields[i].required === \"true\" ? \"#ffffb3\" : \"white\";\n        if (!fields[i].hasOptions) {\n          switch (fields[i].type) {\n            case \"Text\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <Input\n                    id={fields[i].name}\n                    style={{\n                      width: \"80%\",\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color\n                    }}\n                    value={ElementValues[i]}\n                    itemId={i}\n                    key={i}\n                    onChange={this.inputOnChangeHandeler}\n                  ></Input>\n                </div>\n              );\n              break;\n            case \"Number\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <InputNumber\n                    id={fields[i].name}\n                    style={{\n                      width: \"20%\",\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color\n                    }}\n                    Value={ElementValues[i]}\n                    // defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    onChange={e => this.inputNumberOnChangeHandeler(e, i)}\n                  ></InputNumber>\n                </div>\n              );\n              break;\n            case \"Date\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <DatePicker\n                    id={fields[i].name}\n                    style={{\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color,\n                      direction: \"ltr\"\n                    }}\n                    Value={ElementValues[i]}\n                    defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    onChange={e => this.DatePickerOnChangeHandeler(e, i)}\n                  ></DatePicker>\n                </div>\n              );\n              break;\n            case \"Location\":\n              jsxElementArray.push(\n                <div\n                  style={{\n                    marginTop: \"20px\",\n                    display: \"block\",\n                    height: \"300px\",\n                    marginBottom: \"40px\"\n                  }}\n                >\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <MapComponent\n                    id={fields[i].name}\n                    defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    points={ElementValues[i]}\n                    clickHandler={this.LocationOnClickHandeler}\n                  ></MapComponent>\n                </div>\n              );\n              break;\n            default:\n              console.log(\"form element not found\");\n          }\n        } else {\n          jsxElementArray.push(\n            <div style={{ marginTop: \"20px\", display: \"block\" }}>\n              <label htmlFor={fields[i].name}>\n                {fields[i].required === \"true\" ? \"*\" : \"\"}\n                {fields[i].title} :\n              </label>\n\n              <Select\n                style={{\n                  marginLeft: \"10px\",\n                  marginRight: \"10px\",\n                  backgroundColor: color,\n                  width: \"300px\",\n                  textAlign: \"center\"\n                }}\n                placeholder={\n                  this.props.direc === \"rtl\"\n                    ? \"گزینه ی مد نظر خودر انتخاب کنید\"\n                    : \"select an option\"\n                }\n                itemId={i}\n                key={i}\n                // defaultValue={this.props.obj.field.type}\n                onChange={e => this.SelectOptionOnChangeHandeler(e, i)}\n              >\n                {fields[i].options.map(x => (\n                  <Option value={x.value}>{x.label}</Option>\n                ))}\n              </Select>\n            </div>\n          );\n        }\n      }\n    } else {\n      return <div></div>;\n    }\n    return jsxElementArray;\n  };\n\n  intialStateBuilder = () => {\n    let ElementValues = [];\n\n    if (this.state.form.fields) {\n      let fields = [...this.state.form.fields];\n\n      ElementValues.length = fields.length;\n\n      for (let i = 0; i < fields.length; i++) {\n        if (!fields[i].hasOptions) {\n          switch (fields[i].type) {\n            case \"Text\":\n              ElementValues[i] = \"\";\n              break;\n            case \"Number\":\n              ElementValues[i] = \"\";\n              break;\n            case \"Date\": //do noting to set it undifin\n              break;\n            case \"Location\": //do noting to set it undifin\n              ElementValues[i] = [];\n              break;\n            default:\n              console.log(\"form element not found\");\n          }\n        } else {\n          //do noting to set it undifind\n        }\n      }\n    }\n    this.setState({ ElementValues: ElementValues });\n  };\n\n  inputOnChangeHandeler = e => {\n    //itemid is also index of ElementValues\n    // console.log(e.target.value);\n\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[e.target.getAttribute(\"itemId\")] = e.target.value; //can also get i directly like others\n    this.setState({ ElementValues: ElementValues });\n  };\n  inputNumberOnChangeHandeler = (e, i) => {\n    // console.log(e);\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e;\n    this.setState({ ElementValues: ElementValues });\n  };\n  DatePickerOnChangeHandeler = (e, i) => {\n    // console.log(e._d, i);\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e._d;\n    this.setState({ ElementValues: ElementValues });\n  };\n  LocationOnClickHandeler = (i, newPoints) => {\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = newPoints;\n    this.setState({ ElementValues: ElementValues });\n  };\n  SelectOptionOnChangeHandeler = (e, i) => {\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e;\n    this.setState({ ElementValues: ElementValues });\n  };\n  submitForm = () => {\n    const service = new answerService();\n    if (this.checker()) {\n      service\n        .postComplitedFormByClient(\n          this.formatOutput(),\n          this.props.match.params.id\n        )\n        .then(x => {\n          notification.success({\n            message: this.props.direc === \"rtl\" ? \"عملیات انجام شد\" : \"Success\",\n            description:\n              this.props.direc === \"rtl\" ? \"فرم ارسال شد\" : \"ّform is submited\",\n            placement: this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\"\n          });\n          this.props.history.push(\"/ShowAllForms\");\n        })\n        .catch(e => {\n          notification.error({\n            message: this.props.direc === \"rtl\" ? \"عملیات انجام نشد\" : \"Faild\",\n            description:\n              this.props.direc === \"rtl\"\n                ? \"مشکل در ارسال  به سرور\"\n                : \"connection to server has problem\",\n            placement:\n              this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\",\n            onClick: () => {\n              console.log(\"Notification Clicked!\");\n            }\n          });\n        });\n    } else {\n      notification.error({\n        message: this.props.direc === \"rtl\" ? \"عملیات انجام نشد\" : \"Faild\",\n        description:\n          this.props.direc === \"rtl\"\n            ? \"فیلدهای اجباری پر نشده است\"\n            : \"at least one of mandetory filds is not complited\",\n        placement: this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\",\n        onClick: () => {\n          console.log(\"Notification Clicked!\");\n        }\n      });\n    }\n  };\n  formatOutput = () => {\n    let ElementValues = [...this.state.ElementValues];\n    let fields = [...this.state.form.fields];\n    console.log(this.state.form);\n    let res = {\n      title: this.state.form.title,\n      id: this.state.form.id,\n      type: \"formSubmit by client\",\n      fields: []\n    };\n    let tempRes = [];\n\n    for (let i = 0; i < fields.length; i++) {\n      tempRes.push({ elementName: fields[i].name, answer: ElementValues[i] });\n    }\n    res.fields = tempRes;\n    return res;\n  };\n  checker = () => {\n    let ElementValues = [...this.state.ElementValues];\n    let res = true;\n    let fields = [...this.state.form.fields];\n    for (let i = 0; i < fields.length; i++) {\n      if (fields[i].required === \"true\") {\n        if (\n          !ElementValues[i] ||\n          (ElementValues[i] === \"\" &&\n            ElementValues[i] === 0 &&\n            ElementValues[i] === [])\n        ) {\n          res = false;\n          break;\n        }\n      }\n    }\n    return res;\n  };\n}\n\nexport default ShowSpeceficForm;\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport authService from \"../../services/authService\";\r\nclass StartPage extends Component {\r\n  state = {};\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        const authServices = new authService();\r\n        authServices.login(values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          backgroundColor: \"#001529\",\r\n          width: \"50%\",\r\n          height: \"300px\",\r\n          left: 0,\r\n          right: 0,\r\n          top: 0,\r\n          bottom: 0,\r\n          margin: \"auto\",\r\n          maxWidth: \"100%\",\r\n          maxHeight: \"100%\",\r\n          overflow: \"auto\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            marginLeft: \"50px\",\r\n            marginRight: \"50px\",\r\n            marginTop: \"30px\"\r\n          }}\r\n        >\r\n          <h2\r\n            style={{\r\n              color: \"white\",\r\n              textAlign: \"center\"\r\n            }}\r\n          >\r\n            نرم افزار مدیریت بحران\r\n          </h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item>\r\n              {getFieldDecorator(\"username\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"لطفا نام کاربری خود را وارد کنید\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"نام کاربری\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  { required: true, message: \"لطفا رمز خود را وارد کنید\" }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"کلمه‌ی عبور\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{\r\n                  width: \"60%\",\r\n                  margin: \"0 auto\",\r\n                  display: \"block\",\r\n                  marginTop: \"20px\"\r\n                }}\r\n              >\r\n                ورود\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartPage;\r\n","import axios from \"axios\";\r\nimport authService from \"./authService\";\r\nclass areaService {\r\n  url = \"http://localhost:5000\";\r\n  //url = \"http://hw2-ie-back-master.herokuapp.com\";\r\n  authServices = new authService();\r\n  getAllAreasNameForPoligon = poligon => {\r\n    return axios.post(\r\n      this.url + \"/api/area/getAllAreasNameForPoligon\",\r\n      poligon,\r\n      this.authServices.getTokenForSend()\r\n    );\r\n  };\r\n}\r\n\r\nexport default areaService;\r\n","import React, { Component } from \"react\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Progress,\r\n  Modal,\r\n  Input,\r\n  DatePicker,\r\n  InputNumber,\r\n  Select,\r\n  notification\r\n} from \"antd\";\r\nimport answerService from \"../../services/answerService\";\r\nimport appService from \"../../services/appService\";\r\nimport areaService from \"../../services/areaService\";\r\nconst { Option } = Select;\r\nclass ShowDashbordForSpeceficForm extends Component {\r\n  state = {\r\n    percent: 0,\r\n    data: [],\r\n    ElementValues: [],\r\n    visible: false\r\n  };\r\n  columns = [];\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    const aservice = new answerService();\r\n    const service = new appService();\r\n    service\r\n      .getSpeceficFormById(id)\r\n      .then(res =>\r\n        aservice\r\n          .getAllAnswersByFormId(id)\r\n          .then(res2 =>\r\n            this.setState({ formAnswerArray: res2.data, form: res.data.form })\r\n          )\r\n      );\r\n    this.getPercent(id);\r\n    this.getData();\r\n    const idOfInterval = setInterval(() => {\r\n      if (this.state.data.length === 0) {\r\n        this.getData();\r\n      } else {\r\n        clearInterval(idOfInterval);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  headerFixer = () => {\r\n    const partFirst = [\r\n      {\r\n        title: (\r\n          <span style={{ color: \"#006bd7\" }}>\r\n            {this.props.direc === \"rtl\" ? \"ناحیه\" : \"area\"}\r\n          </span>\r\n        ),\r\n        dataIndex: \"area\",\r\n        key: \"area\",\r\n        width: 100,\r\n        align: \"center\",\r\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\r\n      }\r\n    ];\r\n    const partMiddle = this.getMiddlePart();\r\n    const partLast = [\r\n      {\r\n        title: (\r\n          <span style={{ color: \"#006bd7\" }}>\r\n            {this.props.direc === \"rtl\" ? \"نام کاربری\" : \"username\"}\r\n          </span>\r\n        ),\r\n        dataIndex: \"username\",\r\n        key: \"username\",\r\n        width: 150,\r\n        align: \"center\",\r\n\r\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\r\n      },\r\n      {\r\n        title: (\r\n          <span style={{ color: \"#006bd7\" }}>\r\n            {this.props.direc === \"rtl\" ? \"تاریخ ارسال\" : \"time\"}\r\n          </span>\r\n        ),\r\n        dataIndex: \"time\",\r\n        key: \"time\",\r\n        width: 100,\r\n        align: \"center\",\r\n\r\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\r\n      },\r\n      {\r\n        title: (\r\n          <span style={{ color: \"#006bd7\" }}>\r\n            {this.props.direc === \"rtl\" ? \"عملیات\" : \"َAction\"}\r\n          </span>\r\n        ),\r\n        width: 100,\r\n        align: \"center\",\r\n        key: \"action\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <Button type=\"primary\" onClick={() => this.handleShow(record._id)}>\r\n              {this.props.direc === \"rtl\" ? \"مشاهده\" : \"show\"}\r\n            </Button>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n\r\n    this.columns = [...partFirst, ...partMiddle, ...partLast];\r\n  };\r\n  render() {\r\n    this.headerFixer();\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\r\n        }}\r\n      >\r\n        <h3 style={{ color: \"white\", marginRight: \"3px\", marginLeft: \"3px\" }}>\r\n          {this.props.direc === \"rtl\"\r\n            ? \"داشبرد فرم بحران\"\r\n            : \"disaster dashboard\"}\r\n          {typeof this.state.form !== \"undefined\"\r\n            ? \" \" + this.state.form.title + \" \"\r\n            : \"\"}\r\n        </h3>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n\r\n            marginBottom: \"20px\",\r\n            padding: 10\r\n          }}\r\n        >\r\n          {this.props.direc === \"rtl\"\r\n            ? \"درصد پاسخ‌های این فرم به کل پاسخ‌ها\"\r\n            : \"this form answers per all answers\"}\r\n\r\n          <Progress\r\n            style={{ paddingRight: \"8px\", paddingLeft: \"20px\" }}\r\n            type=\"circle\"\r\n            percent={this.state.percent}\r\n            status=\"normal\"\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            marginBottom: \"20px\",\r\n            marginTop: \"20px\",\r\n            padding: 10\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ marginRight: \"5px\", marginLeft: \"10px\" }}\r\n            type=\"primary\"\r\n            icon=\"search\"\r\n            onClick={this.showModal}\r\n          >\r\n            {this.props.direc === \"rtl\" ? \"جست‌ و‌ جو\" : \"search\"}\r\n          </Button>\r\n          <CSVLink data={this.state.data}>\r\n            <Button type=\"primary\">\r\n              {this.props.direc === \"rtl\" ? \"گرفتن خروجی csv\" : \"export csv\"}\r\n            </Button>\r\n          </CSVLink>\r\n          <Modal\r\n            title={this.props.direc === \"rtl\" ? \"جست‌ و‌ جو\" : \"search\"}\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            {this.getSearchItem()}\r\n          </Modal>\r\n          <Table\r\n            columns={this.columns}\r\n            dataSource={this.state.data}\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              marginTop: \"10px\"\r\n            }}\r\n            bordered=\"true\"\r\n            tableLayout=\"auto\"\r\n            size=\"middle\"\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n\r\n            marginBottom: \"20px\",\r\n            marginTop: \"20px\",\r\n            padding: 10\r\n          }}\r\n        >\r\n          {this.getFooter()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getMiddlePart() {\r\n    let res = [];\r\n    if (typeof this.state.form !== \"undefined\") {\r\n      for (let i = 0; i < this.state.form.fields.length; i++) {\r\n        const newItem = {\r\n          title: (\r\n            <span style={{ color: \"#006bd7\" }}>\r\n              {this.state.form.fields[i].title}\r\n            </span>\r\n          ),\r\n          dataIndex: this.state.form.fields[i].name,\r\n          key: this.state.form.fields[i].name,\r\n          width: 150,\r\n          align: \"center\",\r\n\r\n          render: text => <span style={{ color: \"#001529\" }}>{text}</span>\r\n        };\r\n        res.push(newItem);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n  getPercent(id) {\r\n    const aservice = new answerService();\r\n    aservice.getAnswerStatesticByFormId(id).then(res => {\r\n      // console.log(\"per\", res);\r\n      this.setState({ percent: res.data });\r\n    });\r\n  }\r\n  async getData() {\r\n    if (typeof this.state.form !== \"undefined\") {\r\n      console.log(\"s1\", this.state.formAnswerArray);\r\n      //  console.log(\"s2\", this.state.form.title);\r\n      const areaServices = new areaService();\r\n      const answers = this.state.formAnswerArray;\r\n      const form = this.state.form.fields;\r\n      const data = [];\r\n      const columnTypes = [];\r\n      for (let j = 0; j < form.length; j++) {\r\n        columnTypes.push(form[j].type);\r\n      }\r\n\r\n      for (let i = 0; i < answers.length; i++) {\r\n        const row = {};\r\n\r\n        for (let j = 0; j < form.length; j++) {\r\n          if (columnTypes[j] === \"Location\") {\r\n            row[form[j].name] = this.props.direc === \"rtl\" ? \"نقشه\" : \"map\";\r\n\r\n            if (answers[i].fields[j].answer.length > 0) {\r\n              await areaServices\r\n                .getAllAreasNameForPoligon(answers[i].fields[j].answer)\r\n                .then(data => {\r\n                  console.log(\"x24\", data);\r\n                  row.area = data.data.join();\r\n                });\r\n            } else {\r\n              row.area = \"ندارد\";\r\n            }\r\n          } else row[form[j].name] = answers[i].fields[j].answer;\r\n        }\r\n        row.username = answers[i].username;\r\n        row.time = answers[i].time;\r\n        row._id = answers[i]._id;\r\n        data.push(row);\r\n      }\r\n\r\n      this.setState({ data: data, columnTypes: columnTypes });\r\n      // setTimeout(() => {\r\n      //   this.setState({ data: data, columnTypes: columnTypes });\r\n      //   setTimeout(() => {\r\n      //     //retry\r\n      //     this.setState({ data: data, columnTypes: columnTypes });\r\n      //   }, 1200);\r\n      // }, 800);\r\n\r\n      // this.data = data;\r\n    }\r\n  }\r\n  handleShow(answerId) {\r\n    this.props.history.push(\"/ShowSpeceficFormForManager/\" + answerId);\r\n  }\r\n  //start footer part\r\n  getFooter() {\r\n    let res = [];\r\n    if (typeof this.state.form !== \"undefined\") {\r\n      const NumberOfNumberColumns = this.FindAllNumbersOfColumnNumbers();\r\n      for (let i = 0; i < NumberOfNumberColumns.length; i++) {\r\n        res.push(this.createSumOfColumn(NumberOfNumberColumns[i]));\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n  FindAllNumbersOfColumnNumbers() {\r\n    let res = [];\r\n    for (let i = 0; i < this.state.form.fields.length; i++) {\r\n      if (this.state.form.fields[i].type === \"Number\") {\r\n        res.push(i);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n  createSumOfColumn(i) {\r\n    return (\r\n      <div>\r\n        <span>\r\n          <b>{this.state.form.fields[i].title}</b>\r\n        </span>\r\n        {\" \" + \":\" + \" \"}\r\n        <span style={{ color: \"#006bd7\" }}>{this.getSumColumn(i)}</span>\r\n      </div>\r\n    );\r\n  }\r\n  getSumColumn(index) {\r\n    const answers = this.state.formAnswerArray;\r\n    let sum = 0;\r\n    for (let i = 0; i < answers.length; i++) {\r\n      sum += answers[i].fields[index].answer;\r\n    }\r\n    return sum;\r\n  }\r\n  //end footer\r\n  //start modal part\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n  handleOk = e => {\r\n    console.log(\"zio\" + this.state.ElementValues);\r\n    const searchItem = [];\r\n    for (let i = 0; i < this.state.form.fields.length; i++) {\r\n      const row = {};\r\n      row.type = this.state.form.fields[i].type;\r\n      row.name = this.state.form.fields[i].name;\r\n      if (row.type !== \"Location\") row.value = this.state.ElementValues[i];\r\n      else\r\n        row.value = {\r\n          lat: this.state.ElementValues[i].substring(\r\n            0,\r\n            this.state.ElementValues[i].lastIndexOf(\"|\")\r\n          ),\r\n          lng: this.state.ElementValues[i].substring(\r\n            this.state.ElementValues[i].lastIndexOf(\"|\") + 1\r\n          )\r\n        };\r\n      console.log(\"ppp\", row.value);\r\n      searchItem.push(row);\r\n    }\r\n\r\n    const formId = this.props.match.params.id;\r\n    const aservice = new answerService();\r\n    aservice\r\n      .filterAnswersForGrid(searchItem, formId)\r\n      .then(res => {\r\n        console.log(\"filter\", res);\r\n        this.setState({\r\n          formAnswerArray: res.data\r\n        });\r\n      })\r\n      .finally(() => {\r\n        this.getData();\r\n        this.setState({\r\n          visible: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  getSearchItem() {\r\n    let res = [];\r\n    let ElementValues = [...this.state.ElementValues];\r\n    if (typeof this.state.form !== \"undefined\") {\r\n      for (let i = 0; i < this.state.form.fields.length; i++) {\r\n        console.log(\"lala\", this.state.form.fields);\r\n        if (this.state.form.fields[i].type === \"Location\") {\r\n          res.push(\r\n            this.buildItemMap(this.state.form.fields[i], i, ElementValues[i])\r\n          );\r\n        } else if (this.state.form.fields[i].type === \"Date\") {\r\n          //for now\r\n          // res.push(\r\n          //   this.buildItemDate(this.state.form.fields[i], i, ElementValues[i])\r\n          // );\r\n        } else if (this.state.form.fields[i].type === \"Number\") {\r\n          res.push(\r\n            this.buildItemNumber(this.state.form.fields[i], i, ElementValues[i])\r\n          );\r\n        } else {\r\n          res.push(\r\n            this.buildItemNotSpecial(\r\n              this.state.form.fields[i],\r\n              i,\r\n              ElementValues[i]\r\n            )\r\n          );\r\n        }\r\n      }\r\n      // res.push(this.buildItemLastPart(this.state.form));\r\n    }\r\n    return res;\r\n  }\r\n  buildItemNotSpecial(row, i, ElementValue) {\r\n    return (\r\n      <div>\r\n        <span>{row.title} :</span>\r\n        <Input\r\n          value={ElementValue}\r\n          itemId={i}\r\n          key={i}\r\n          onChange={this.inputOnChangeHandeler}\r\n        ></Input>\r\n      </div>\r\n    );\r\n  }\r\n  buildItemDate(row, i, ElementValue) {\r\n    return (\r\n      <div>\r\n        <span>{row.title} :</span>\r\n        <DatePicker\r\n          id={\"xdate\" + i}\r\n          style={{ display: \"block\", width: \"100%\" }}\r\n          value={ElementValue}\r\n          defaultValue={0}\r\n          itemId={i}\r\n          key={i}\r\n          onChange={e => this.DatePickerOnChangeHandeler(e, i)}\r\n        ></DatePicker>\r\n      </div>\r\n    );\r\n  }\r\n  buildItemMap(row, i, ElementValue) {\r\n    return (\r\n      <div>\r\n        <span>\r\n          {row.title} (لطفا با فرمت زیر نقطه‌ی مورد نظر را وارد کنید):\r\n        </span>\r\n        <Input\r\n          value={ElementValue}\r\n          itemId={i}\r\n          placeholder=\"lng|lat\"\r\n          key={i}\r\n          onChange={this.inputOnChangeHandeler}\r\n        ></Input>\r\n      </div>\r\n    );\r\n  }\r\n  buildItemNumber(row, i, ElementValue) {\r\n    return (\r\n      <div>\r\n        <span>{row.title} :</span>\r\n        <InputNumber\r\n          style={{ display: \"block\", width: \"100%\" }}\r\n          value={ElementValue}\r\n          itemId={i}\r\n          key={i}\r\n          onChange={e => this.inputNumberOnChangeHandeler(e, i)}\r\n        ></InputNumber>\r\n      </div>\r\n    );\r\n  }\r\n  inputOnChangeHandeler = e => {\r\n    //itemid is also index of ElementValues\r\n    // console.log(e.target.value);\r\n\r\n    let ElementValues = [...this.state.ElementValues];\r\n    ElementValues[e.target.getAttribute(\"itemId\")] = e.target.value; //can also get i directly like others\r\n    this.setState({ ElementValues: ElementValues });\r\n  };\r\n  inputNumberOnChangeHandeler = (e, i) => {\r\n    // console.log(e);\r\n    let ElementValues = [...this.state.ElementValues];\r\n    ElementValues[i] = e;\r\n    this.setState({ ElementValues: ElementValues });\r\n  };\r\n  DatePickerOnChangeHandeler = (e, i) => {\r\n    // console.log(e._d, i);\r\n    let ElementValues = [...this.state.ElementValues];\r\n    ElementValues[i] = e._d;\r\n    this.setState({ ElementValues: ElementValues });\r\n  };\r\n\r\n  //end modal part\r\n}\r\n\r\nexport default ShowDashbordForSpeceficForm;\r\n","import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport Polygon from \"./mapElements/Polygon\";\r\n\r\nclass MapUnchangeComponent extends Component {\r\n  lastId = 0;\r\n  render() {\r\n    // console.log(\"x\");\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={10}\r\n        style={{ width: \"30%\", height: \"300px\" }}\r\n        initialCenter={{ lat: 35.715298, lng: 51.404343 }}\r\n      >\r\n        {this.drawPolygon()}\r\n        {this.props.points.map(x => (\r\n          <Marker\r\n            name={\"Current location\"}\r\n            position={{ lat: x.lat, lng: x.lng }}\r\n            id={x.pointId}\r\n            key={x.pointId}\r\n          />\r\n        ))}\r\n      </Map>\r\n    );\r\n  }\r\n\r\n  drawPolygon = () => {\r\n    if (this.props.points.length >= 3) {\r\n      console.log(\"points\", this.props.points);\r\n      return (\r\n        <Polygon\r\n          paths={this.props.points}\r\n          strokeColor=\"#0000FF\"\r\n          strokeOpacity={0.8}\r\n          strokeWeight={2}\r\n          fillColor=\"#0000FF\"\r\n          fillOpacity={0.35}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDjs0u02-62FMwrtxMxci5pc6PIubSyW28\"\r\n})(MapUnchangeComponent);\r\n","import React, { Component } from \"react\";\r\nimport answerService from \"../../services/answerService\";\r\nimport appService from \"../../services/appService\";\r\nimport MapUnchangeComponent from \"../reuseable/mapUnchangeComponent\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  InputNumber,\r\n  DatePicker,\r\n  Select,\r\n  notification\r\n} from \"antd\";\r\nimport MapComponent from \"../reuseable/mapComponent\";\r\nconst { Option } = Select;\r\nclass ShowSpeceficFormForManager extends Component {\r\n  firstTimeForSetState = true;\r\n  state = {\r\n    form: {},\r\n    ElementValues: [],\r\n    data: [],\r\n    body: \"\",\r\n    formTitle: \"\",\r\n    testloc: [\r\n      { lat: 35.74874138089811, lng: 51.33087158203125 },\r\n      { lat: 35.62381451392674, lng: 51.383056640625 },\r\n      { lat: 35.71752800693265, lng: 51.43524169921875 }\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.generateFormData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\r\n        }}\r\n      >\r\n        <h3 style={{ color: \"white\", marginRight: \"20px\", marginLeft: \"20px\" }}>\r\n          {this.props.direc === \"rtl\" ? \"مشاهده‌ی فرم\" : \"Show form\"}\r\n        </h3>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            margin: \"20px\",\r\n\r\n            padding: 10\r\n          }}\r\n        >\r\n          {/* <h4>{this.state.form.title}</h4> */}\r\n          <h3>\r\n            {this.props.direc === \"rtl\" ? \" نام فرم:\" : \"form name: \"}{\" \"}\r\n            {this.state.formTitle}\r\n          </h3>\r\n          {this.state.body}\r\n          {/* <div\r\n            style={{\r\n              marginTop: \"20px\",\r\n              display: \"block\",\r\n              height: \"300px\",\r\n              marginBottom: \"40px\"\r\n            }}\r\n          >\r\n            <MapUnchangeComponent\r\n              points={this.state.testloc}\r\n            ></MapUnchangeComponent>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  generateFormData() {\r\n    const answerId = this.props.match.params.id;\r\n    const aservice = new answerService();\r\n    const service = new appService();\r\n    aservice.getById(answerId).then(res => {\r\n      //   this.setState({ formAnswer: res2.data, form: res.data.form })\r\n      const answer = res.data;\r\n      service.getSpeceficFormById(answer.formId).then(res2 => {\r\n        const form = res2.data.form;\r\n        const data = [];\r\n        for (let i = 0; i < form.fields.length; i++) {\r\n          const row = {};\r\n          row.type = form.fields[i].type;\r\n          row.title = form.fields[i].title;\r\n          row.value = answer.fields[i].answer;\r\n          data.push(row);\r\n        }\r\n        //  {type , title,value}\r\n        // console.log(\"form\", form);\r\n        // console.log(\"answer\", answer);\r\n        // console.log(\"data\", data);\r\n        this.setState({\r\n          form: form,\r\n          answer: answer,\r\n          data: data,\r\n          body: this.generateBody(data),\r\n          formTitle: form.title\r\n        });\r\n      });\r\n    });\r\n  }\r\n  generateBody(data) {\r\n    const res = [];\r\n\r\n    if (data.length > 0) {\r\n      data.forEach(element => {\r\n        if (element.type !== \"Location\") {\r\n          res.push(this.getElementNotMap(element));\r\n        } else {\r\n          res.push(this.getElementMap(element));\r\n        }\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n  getElementNotMap(row) {\r\n    return (\r\n      <div>\r\n        <b>{row.title}</b>\r\n        {\" \" + \":\" + \" \"}\r\n        {row.value}\r\n      </div>\r\n    );\r\n  }\r\n  getElementMap(row) {\r\n    const points = [];\r\n    for (let i = 0; i < row.value.length; i++) {\r\n      const point = { lat: row.value[i].lat, lng: row.value[i].lng };\r\n      points.push(point);\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          marginTop: \"20px\",\r\n          display: \"block\",\r\n          height: \"300px\",\r\n          marginBottom: \"40px\"\r\n        }}\r\n      >\r\n        <b>{row.title}</b>\r\n        {\" \" + \":\" + \" \"}\r\n        <MapUnchangeComponent points={points}></MapUnchangeComponent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowSpeceficFormForManager;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/commons/navbar\";\nimport ShowAllForms from \"./components/pages/showAllForms\";\nimport { Row, Col } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ShowSpeceficForm from \"./components/pages/showSpeceficForm\";\nimport StartPage from \"./components/pages/startPage\";\nimport { Form } from \"antd\";\nimport authService from \"./services/authService\";\nimport ShowDashbordForSpeceficForm from \"./components/pages/showDashbordForSpeceficForm\";\nimport ShowSpeceficFormForManager from \"./components/pages/showspeceficFormForManager\";\n\nclass App extends React.Component {\n  state = {\n    smallSize: false,\n    isNavbarButtonClicked: false,\n    direc: \"rtl\",\n    formCreaterState: {\n      title: \"Form\",\n      Elements: [],\n      lastId: 0\n    }\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  resize() {\n    const resizeRes = window.innerWidth <= 780;\n    if (!resizeRes) {\n      this.setState({ isNavbarButtonClicked: false });\n    }\n    this.setState({ smallSize: resizeRes });\n  }\n  render() {\n    const { smallSize } = this.state;\n    const authServices = new authService();\n    if (authServices.isTokenExist() && !authServices.checkIfTokenIsExpired()) {\n      authServices.logUserOutInExpirtim();\n      if (smallSize) {\n        return (\n          <div style={{ direction: this.state.direc }}>{this.BigView()}</div>\n        );\n      } else {\n        return (\n          <div style={{ direction: this.state.direc }}>{this.smallView()}</div>\n        );\n      }\n    } else {\n      const WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(\n        StartPage\n      );\n      return (\n        <WrappedNormalLoginForm />\n        //  <StartPage  />\n      );\n    }\n  }\n\n  smallView = () => {\n    const { direc } = this.state;\n    if (direc === \"rtl\") {\n      return (\n        <div className=\"App\">\n          <Row>\n            <Col span={this.state.isNavbarButtonClicked ? 22 : 20}>\n              <div style={{ margin: \"20px\" }}>\n                {/* <ShowAllForms></ShowAllForms> */}\n                <Switch>\n                  <Route\n                    path=\"/ShowAllForms\"\n                    render={props => (\n                      <ShowAllForms direc={this.state.direc} {...props} />\n                    )}\n                  />\n                  <Route\n                    path=\"/ShowSpeceficForm/:id\"\n                    render={props => (\n                      <ShowSpeceficForm direc={this.state.direc} {...props} />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/ShowDashbordForSpeceficForm/:id\"\n                    render={props => (\n                      <ShowDashbordForSpeceficForm\n                        direc={this.state.direc}\n                        {...props}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/ShowSpeceficFormForManager/:id\"\n                    render={props => (\n                      <ShowSpeceficFormForManager\n                        direc={this.state.direc}\n                        {...props}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/\"\n                    render={props => (\n                      <ShowAllForms direc={this.state.direc} {...props} />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </Col>\n            <Col span={this.state.isNavbarButtonClicked ? 2 : 4}>\n              <NavBar\n                smallSize=\"false\"\n                direc={this.state.direc}\n                onDirectChange={this.directHandler}\n                isNavbarButtonClicked={this.navbarButtonResizeViewClickHandler}\n              ></NavBar>\n            </Col>\n          </Row>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Row>\n            <Col span={this.state.isNavbarButtonClicked ? 2 : 4}>\n              <NavBar\n                smallSize=\"false\"\n                direc={this.state.direc}\n                onDirectChange={this.directHandler}\n                isNavbarButtonClicked={this.navbarButtonResizeViewClickHandler}\n              ></NavBar>\n            </Col>\n            <Col span={this.state.isNavbarButtonClicked ? 22 : 20}>\n              <div style={{ margin: \"20px\" }}>\n                {/* <ShowAllForms></ShowAllForms> */}\n                <Switch>\n                  <Route\n                    path=\"/ShowAllForms\"\n                    render={props => (\n                      <ShowAllForms direc={this.state.direc} {...props} />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/ShowSpeceficForm/:id\"\n                    render={props => (\n                      <ShowSpeceficForm direc={this.state.direc} {...props} />\n                    )}\n                  />\n                  <Route\n                    path=\"/ShowDashbordForSpeceficForm/:id\"\n                    render={props => (\n                      <ShowDashbordForSpeceficForm\n                        direc={this.state.direc}\n                        {...props}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/ShowSpeceficFormForManager/:id\"\n                    render={props => (\n                      <ShowSpeceficFormForManager\n                        direc={this.state.direc}\n                        {...props}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/\"\n                    render={props => (\n                      <ShowAllForms direc={this.state.direc} {...props} />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  };\n  BigView = () => {\n    return (\n      <div className=\"App\">\n        <Col>\n          <Row style={{ zIndex: \"1\" }}>\n            <NavBar\n              smallSize=\"true\"\n              direc={this.state.direc}\n              onDirectChange={this.directHandler}\n            ></NavBar>\n          </Row>\n          <Row style={{ zIndex: \"0\" }}>\n            {/* <ShowAllForms></ShowAllForms> */}\n            <Switch>\n              <Route\n                path=\"/ShowAllForms\"\n                render={props => (\n                  <ShowAllForms direc={this.state.direc} {...props} />\n                )}\n              />\n              <Route\n                path=\"/ShowSpeceficForm/:id\"\n                render={props => (\n                  <ShowSpeceficForm direc={this.state.direc} {...props} />\n                )}\n              />\n              <Route\n                path=\"/ShowDashbordForSpeceficForm/:id\"\n                render={props => (\n                  <ShowDashbordForSpeceficForm\n                    direc={this.state.direc}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                path=\"/ShowSpeceficFormForManager/:id\"\n                render={props => (\n                  <ShowSpeceficFormForManager\n                    direc={this.state.direc}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                path=\"/\"\n                render={props => (\n                  <ShowAllForms direc={this.state.direc} {...props} />\n                )}\n              />\n            </Switch>\n          </Row>\n        </Col>\n      </div>\n    );\n  };\n\n  navbarButtonResizeViewClickHandler = () => {\n    this.setState({ isNavbarButtonClicked: !this.state.isNavbarButtonClicked });\n  };\n  directHandler = () => {\n    const res = this.state.direc === \"rtl\" ? \"ltr\" : \"rtl\";\n    this.setState({ isNavbarButtonClicked: false });\n    this.setState({ direc: res });\n  };\n  formCreaterStateFixHandeler = st => {\n    // console.log(st);\n    this.setState({ formCreaterState: st });\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}